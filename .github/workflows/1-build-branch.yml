name: Branch Pipeline - Build & Test

on:
  push:
    branches-ignore: [main]
  workflow_dispatch:
    inputs:
      canister:
        description: 'Canister to deploy (leave empty for all)'
        required: false
        default: ''

jobs:
  build:
    # Skip this workflow if the commit message contains "Bump version"
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Insert commit hash and datetime
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_backend/api/status.py
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_frontend/src/app.html

          COMMIT_DATETIME=$(git log --format="%cd" --date=iso8601 -1)
          sed -i "s/COMMIT_DATETIME_PLACEHOLDER/$COMMIT_DATETIME/g" src/realm_frontend/src/app.html

          VERSION=$(cat version.txt)
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" src/realm_backend/api/status.py
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" src/realm_frontend/src/app.html
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push base image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: base
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}
          no-cache: true
          pull: true
      
      - name: Build and push demo image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: demo
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:demo-${{ github.sha }}

      - name: Build and push test image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: test
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:test-${{ github.sha }}
          pull: true

      - name: Build and push ui-test image
        uses: docker/build-push-action@v4
        with:
          context: .
          target: ui-test
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:ui-test-${{ github.sha }}
          pull: true
      
      - name: Verify Docker images
        if: always()
        run: |
          mkdir -p build-logs
          # Check if the base image was built successfully
          if docker image inspect ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} >/dev/null 2>&1; then
            echo "✅ Base Docker image built successfully"
            docker images | grep ${{ github.sha }} || true
          else
            echo "❌ Base Docker image build failed"
            echo "Base Docker build failed" > build-logs/build-failed.txt
          fi

          # Check if the demo image was built successfully
          if docker image inspect ghcr.io/${{ github.repository_owner }}/realms:demo-${{ github.sha }} >/dev/null 2>&1; then
            echo "✅ Demo Docker image built successfully"
            docker images | grep demo-${{ github.sha }} || true
          else
            echo "❌ Demo Docker image build failed"
            echo "Demo Docker build failed" > build-logs/demo-build-failed.txt
          fi

          # Check if the test image was built successfully
          if docker image inspect ghcr.io/${{ github.repository_owner }}/realms:test-${{ github.sha }} >/dev/null 2>&1; then
            echo "✅ Test Docker image built successfully"
            docker images | grep test-${{ github.sha }} || true
          else
            echo "❌ Test Docker image build failed"
            echo "Test Docker build failed" > build-logs/test-build-failed.txt
          fi

          # Check if the ui-test image was built successfully
          if docker image inspect ghcr.io/${{ github.repository_owner }}/realms:ui-test-${{ github.sha }} >/dev/null 2>&1; then
            echo "✅ UI Test Docker image built successfully"
            docker images | grep ui-test-${{ github.sha }} || true
          else
            echo "❌ UI Test Docker image build failed"
            echo "UI Test Docker build failed" > build-logs/ui-test-build-failed.txt
          fi
      
      - name: Save build metadata
        if: always()
        run: |
          echo "Commit: ${{ github.sha }}" > build-logs/build-info.txt
          echo "Image: ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}" >> build-logs/build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-logs/build-info.txt
          echo "Timestamp: $(date -u)" >> build-logs/build-info.txt
      
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs-branch
          path: build-logs/
          retention-days: 7

  # All test jobs run in parallel after successful build
  test:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run linting checks
        run: |
          mkdir -p lint-logs
          # First fix formatting issues
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:test-${{ github.sha }} ./scripts/run_linters.sh --fix > lint-logs/lint-fix.log 2>&1 || true
          # Then verify all issues are fixed
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:test-${{ github.sha }} ./scripts/run_linters.sh > lint-logs/lint-check.log 2>&1 || true
      
      - name: Upload lint logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs-branch
          path: lint-logs/
          retention-days: 7

  test-extensions:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run extension tests
        run: |
          docker run --rm \
            -v "$(pwd)/extension-logs:/app/extension-logs" \
            ghcr.io/${{ github.repository_owner }}/realms:test-${{ github.sha }} bash -c "
          ./tests/test_extensions.py; \
          EXIT_CODE=\$?; \
          mkdir -p /app/extension-logs && \
          cp -f dfx.log /app/extension-logs/ 2>/dev/null || true && \
          cp -f realms_cli.log /app/extension-logs/ 2>/dev/null || true; \
          exit \$EXIT_CODE"
      
      - name: Upload extension test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extension-test-logs-branch
          path: extension-logs/
          retention-days: 7

  test-ui-e2e:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Playwright tests
        run: |
          docker run --rm \
            -v "$(pwd)/test-logs:/app/test-logs" \
            ghcr.io/${{ github.repository_owner }}/realms:ui-test-${{ github.sha }} bash -c "
          (realms create --random && \
          realms deploy --folder .realm && \
          src/realm_frontend/run-e2e-tests.sh specs/workflows.spec.ts specs/multilingual.spec.ts --reporter=line); \
          EXIT_CODE=\$?; \
          mkdir -p /app/test-logs && \
          cp -f dfx.log /app/test-logs/ 2>/dev/null || true && \
          cp -f dfx2.log /app/test-logs/ 2>/dev/null || true && \
          cp -f realms_cli.log /app/test-logs/ 2>/dev/null || true && \
          cp -f src/realm_frontend/test-results/*.* /app/test-logs/ 2>/dev/null || true; \
          exit \$EXIT_CODE"
      
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-logs-branch
          path: test-logs/
          retention-days: 7