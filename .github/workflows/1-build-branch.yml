name: 1. Build and Test (branch)

on:
  push:
    branches-ignore: [main]
  workflow_dispatch:
    inputs:
      canister:
        description: 'Canister to deploy (leave empty for all)'
        required: false
        default: ''

jobs:
  build:
    # Skip this workflow if the commit message contains "Bump version"
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Insert commit hash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_backend/api/status.py
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_frontend/src/app.html

          VERSION=$(cat version.txt)
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" src/realm_backend/api/status.py
          sed -i "s/VERSION_PLACEHOLDER/$VERSION/g" src/realm_frontend/src/app.html
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Wait for Docker image to be available
        run: |
          # Wait up to 5 minutes for the Docker image to be available
          for i in {1..30}; do
            if docker pull ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}; then
              echo "Docker image is available"
              break
            else
              echo "Waiting for Docker image... (attempt $i/30)"
              sleep 10
            fi
          done
      
      - name: Run linting checks
        run: |
          # First fix formatting issues
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} ./scripts/run_linters.sh --fix
          # Then verify all issues are fixed
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} ./scripts/run_linters.sh
      
      - name: Run frontend tests
        run: |
          # Run frontend tests
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} bash -c "cd src/realm_frontend && npm test"

  test-extensions:
    runs-on: ubuntu-latest
    needs: build
    if: "!contains(github.event.head_commit.message, 'Bump version')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Wait for Docker image to be available
        run: |
          # Wait up to 5 minutes for the Docker image to be available
          for i in {1..30}; do
            if docker pull ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}; then
              echo "Docker image is available"
              break
            else
              echo "Waiting for Docker image... (attempt $i/30)"
              sleep 10
            fi
          done
      
      - name: Run extension tests
        run: |
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} bash -c "./tests/test_extensions.py"
