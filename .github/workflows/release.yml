name: Create new release

on:
  workflow_run:
    workflows: ["Test", "Test IC"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:  # Allows manual triggering without restrictions
    inputs:
      release_type:
        description: 'Type of release (patch, minor, major)'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      create_github_release:
        description: 'Create GitHub Release'
        required: false
        default: true
        type: boolean

jobs:
  deploy:
    # Only run if the workflow_run event was successful or if it's a manual dispatch
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.PAT_GITHUB }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build setuptools wheel bumpversion
    
    - name: Bump version
      if: ${{ github.event.inputs.release_type != '' }}
      id: bump_version
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        bumpversion ${{ github.event.inputs.release_type }}
        echo "NEW_VERSION=$(grep -A 3 '\[metadata\]' setup.cfg | grep 'version =' | cut -d '=' -f 2 | tr -d ' ')" >> $GITHUB_OUTPUT
    
    - name: Build realm canister WASM files in Docker
      run: bash ./build_realm_wasm.sh
    
    - name: Push changes
      if: ${{ github.event.inputs.release_type != '' }}
      run: |
        git remote set-url origin https://${{ secrets.PAT_GITHUB }}@github.com/${{ github.repository }}.git
        git push origin
        git push origin --tags
    
    - name: Create Release
      if: ${{ github.event.inputs.release_type != '' && github.event.inputs.create_github_release == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
        name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        generate_release_notes: true
        files: |
          realm*
      env:
        GITHUB_TOKEN: ${{ secrets.PAT_GITHUB }}