name: Deploy to Internet Computer

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      canister:
        description: 'Canister to deploy (leave empty for all)'
        required: false
        default: ''

jobs:
  # Build and publish Docker image
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Insert commit hash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_backend/api/status.py
          sed -i "s/COMMIT_HASH_PLACEHOLDER/$COMMIT_HASH/g" src/realm_frontend/src/app.html
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}
  
  # Test job
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run tests in container
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}
          docker run --rm ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} npm test
  
  # Deploy to staging environment
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Deploy to staging
        run: |
          # Store identity in a temporary file
          echo "${{ secrets.IC_IDENTITY_PEM }}" > identity.pem
          chmod 600 identity.pem
          
          # Pull the same image used for testing
          docker pull ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }}
          
          # Run deployment script with staging network
          docker run --rm \
            -v "$(pwd)/identity.pem:/app/identity.pem" \
            -v "$(pwd)/scripts/deploy_ic.sh:/app/deploy_ic.sh" \
            -e DFX_WARNING="-mainnet_plaintext_identity" \
            ghcr.io/${{ github.repository_owner }}/realms:${{ github.sha }} \
            bash -c "/app/deploy_ic.sh /app/identity.pem staging"
          
          # Clean up
          rm identity.pem